THINGS YOU CAN DO W/ JS:

    JavaScript sprinkles: AJAX - adding interactivity - form submissions - 
    loading screeens - popups/modals - updating data on a sub form

    Web App: complete app - frameworks= react, vue, angular, svelte, 
    vanillajs(regular js)

    Sever Software: Node.js = express, nest.js, sail.js 

    Mobile Apps: react native, native script, cordova 

    Desktop App: electron 

    Games: Phaser, webGL, Three.js 

    Hardware: Arduino 

HISTORY:
    ECMA = JavaScript 

ECMASCRIPT RUNTIMES:
    Google chrome - V8 engine 
    firefox - spidermokey warpmokney 
    microsoft edge - blink now V8
    internet explorer - chakra (no longer supported)
    Node.js - V8

WAYS OF WRITING JS
    inline -  not reccomended 
    internal - sometimes appropriate = <script> inside body or head of HTML 
        mostly used in things like google adds, to load befoer application 
        loads or external tools 
    external - preffered = load it in each HTML

Notes: (random)
    code . = open VS code
    emmet 
    To run html file/ js on browser: 
        Right click on html => copy path => past into broswer
    when making repo => press period to open VS code and start project that has 
        been created or have README file 


WHITE SPACE:
    does not have meaning or do anything is JS 

CASE SENSITIVITY:   
    when naming functions, classes, etc 
    be specific with varible names
    EX:
    const hello = "world";
    let HELLO = "WORLD!";
     
     console.log(hello) => frist hello 

COMMENTS:
    used for adding comment to code
    make a list of to-do items 
    EX:
    shortcut => command - forward slash = making comment 
    Use TODO: when ding projects or tracking progress
    Multy line comment */ type */

SEMI-COLONS:
    are optional in most cases 

CONSOLE:
    Right click on browser => inspect 



GIT:

    git branch - d => delete branch 
    git branch => shows all branches - hit :q to exit 

DATA TYPES:

    typeof() => will return a type of object - not a function is a keyword 


    Primitive data types:
        String:
            anything within a quotation mark
            EX: let hello = "world" or use single quotes 
            Template literal: let greeting = 'hello ${hello};
                                greeting (being entered)
                                returned ; 'hello world'
            concatnating: let string1 ='hello'
                            let string2 = 'world'
                            string1 + '' + string2
                            returns 'hello world'
            Properties: 
                .padStart() & .padEnd() => study this property 


        Number:
            integer 
            infinity 
        Boolean:
            true === 0 => false 
            true == 0 => false
        Undefined:
            let varible => undefined because no value is assigned to varible 
        Null:
            null inherits from object 
            let var = null will return null 
        Big int:
            let bigOne = 1n => adding n to number values 
            does not have infinity
            cannot be a decimal
        Symbol:
            let sym = Symbol("im a symbol") => creates an 
                anonymous unique value 
            

VARIABLES:
    var - used in previous JS versions
    let - declared values can be reassigned | can only be declared once 
    const - declared values can not be reassigned

OPERATORS:
    Assignment
    = assignment
    += addition assignment
    -= subtraction assignment
    *= multiplication assignment
    /= division assignment
    Arithmetic
    + addition
    - subtraction
    * multiplication
    / division
    % modulo
    || or 
    && and 
    

    !(1 != true) => reverses it 

Concatination: + in making a statement 

Template literal: using {variable} in a long story => 
    refer to day 2 takehome 

DAY 3:

Additional notes:
  arr[num] => gives back idx of element in arr or string 
  str.indexOf[0] => will give the index of varible inside []
  str.slice(str.indexOf('Wo')) => give starting index of an 
        array or get the last word 


STRING METHODS 

    Array and string methods: 

        property that belongs to strings AND array: 
            .length() 
            arr[num] => gives back idx of element in arr or string 
            str.indexOf[0] => will give the index of varible inside []
            str.slice(str.indexOf('Wo')) => give starting index of an 
                array or get the last word 
            join() => takes elements of array and joins it to a sting 
            arr.join(', ') => joins as a string
            arr.reverse.join(', ') => reverse it and join as a string 
            split() => can undo a join but remains a string 
                can split string as well alike an array
    
    strings:

        methods: ! CASE SENSITIVITY ! 
            str.toUpperCase() => everything to upper case
            str.toLowerCase() => everything to lower case
            str.replace() => will replace the first instance 
            str.replaceAll() => will replace all elements
            str.repeat() => repeat the element inputed into function 
            str.startsWith() => to check if string starts with input given in function
            str.endsWith() => check if str ends with input in function 
            str.includes() => check to see if input is anywhere in the str 

POP UP METHODS 

    alert(userName) => pop up alert in browser 
        can add more to the string to deliver more of a msg
    confirm() => gives a cancel or ok in the browser notfication tab 
        when hit cancel = false vs ok would = true 
    prompt() => asks user on browser for a value 
        gives back string value 
        prompt('enter' , 10) => default value 
        EXAMPLE:
        const firstName = prompt('Please enter your first name')
        const splitName = firstName.split('')
        let reversedName = splitName.reverse()
        reversedName = reversedName.join()
        alert(splitName.reverse().join())

        let num = 25 => num is string 
        parseInt(num) => makes it an integer 
        
        PARSE INT EXAMPLE:
        let newNum = parseInt(prompt('Enter a number', 10))
        let newNum2 = parseInt(prompt('Enter a second number', 10))
        alert('Your result: ' + (newNum + newNum2)) 

MATH PROPERTIES 

DATE OBJECT         


